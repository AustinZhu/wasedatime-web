import React from 'react';
import { connect } from 'react-redux';
import { Redirect } from 'react-router-dom';
import PropTypes from 'prop-types';

import { fetchBldgCurrentClassrooms } from '../actions/index';
import ClassroomList from '../components/ClassroomList';
import allBldgs from '../api/buildingList';

class ClassroomListContainer extends React.Component {
  constructor(props) {
    super(props);
    this.bldgName = this.props.match.params.bldgName;
    this.backgroundUrl = '../img/nishi_waseda_campus-sm.jpg';
  }

  componentDidMount() {
    this.props.fetchBldgCurrentClassrooms(this.bldgName);
  }

  render() {
    if (allBldgs.includes(this.bldgName)) {
      return (
        <ClassroomList
          bldgName={this.bldgName}
          backgroundUrl={this.backgroundUrl}
          classrooms={this.props.mergedClassrooms}
        />
      );
    } else {
      return <Redirect from={this.props.match.url} to="/roomfinder" />;
    }
  }
}

const mergeClassrooms = (clrmIds, clrmsById, oClrmIds, oClrmsById) => {
  var mergedClassrooms = Object.assign({}, clrmsById);
  oClrmIds.forEach(id => {
    mergedClassrooms[id] = oClrmsById[id];
  });
  return mergedClassrooms;
};

const mapStateToProps = (state, ownProps) => {
  const mergedClassroomsObject = mergeClassrooms(
    state.bldgClassroomIds,
    state.bldgClassroomsById,
    state.bldgOccupiedClassroomIds,
    state.bldgOccupiedClassroomsById
  );
  const mergedClassrooms = Object.values(mergedClassroomsObject);
  return { mergedClassrooms };
};

//using shorthand syntax
const mapDispatchToProps = {
  fetchBldgCurrentClassrooms
};

//export a container component generated by react-redux
export default connect(mapStateToProps, mapDispatchToProps)(
  ClassroomListContainer
);

ClassroomListContainer.propTypes = {
  match: PropTypes.object.isRequired,
  mergedClassrooms: PropTypes.array.isRequired,
  fetchBldgCurrentClassrooms: PropTypes.func.isRequired
};
